.user-nav {
	//background-color: greenyellow;

	align-self: stretch;//this overides the align center in the header which originally centered the elemenet vertically to now COVERING(FILLING) its position fully
	display: flex;//flex value of display by default align items horizontally and centered inside the parent element
	align-items: center;//aligns both vertically and horizontally

	& > * {//selector > (selects the parent direct children elements) & wildcat * selects all children
		padding: 0 2rem;
		cursor: pointer;
		height: 100%; //making the entire icons have full 100% height
		display: flex;
		align-items: center;
	}

	& > *:hover {//when any of all the the children are hovered
		background-color: var(--color-grey-light-2);
	}

	&__icon-box {
		position: relative;
	}

	&__icon {
		height: 2.25rem;//this is the simplest way of defining svg size by these 2 properties
		width: 2.25rem;
		fill: var(--color-grey-dark-2);
		
	}

	&__notification {
		font-size: .8rem;
		height: 1.75rem;
		width: 1.75rem;
		border-radius: 50%;
		background-color: var(--color-primary);
		color: #fff;
		position: absolute;
		top: 1.5rem;
		right: 1.1rem;

		display: flex;
		justify-content: center;
		align-items: center;
	}

	&__user-photo {
		height: 3.75rem;
		border-radius: 50%;
		margin-right: 1rem;
	}
}



///Form componenet STYLES

.form {

	 &__group:not(:last-child) {
		margin-bottom: 2rem;
	 }

	 &__input { 
		font-size: 1.5rem;
		font-family: inherit;  
		color: inherit;
		padding: 1.5rem 2rem;
		border-radius: 2px;
		background-color: rgba($color-white, .5);
		border: none;
		border-bottom: 3px solid transparent;
		width: 90%;
		display: block;
		transition: all .3s; //this is for the margin indicator changing its coor from red to green nicely


		@include respond(tab-port) {// width <=900px
			width: 100%;    //1rem = 8px, 8/16 = 50%
		}


		//this the part which shows the input areas is active either outline or defining some kind of margin for visisbility
	 	&:focus {
	 	outline: none;
	 	box-shadow: 0 1rem 2rem rgba($color-black, .1);
	 	border-bottom: 3px solid $color-primary;
	 	}

	 	&:focus:invalid {
	 		border-bottom: 3px solid $color-secondary-dark;
	 	}

		&::-webkit-input-placeholder {
	 	color: $color-grey-dark-2; 
	 	}

	 }


	 &__label {
		font-size: 1.2rem;
		font-weight: 700;
		margin-left: 2rem;
		margin-top: .7rem;
		display: block;
		transition: all .3s;
	 }

	 //:placeholder-shown pseudo class is used to target the 
	 &__input:placeholder-shown + &__label {
	 	opacity: 0;
	 	visibility: hidden;
	 	transform: translateY(-4rem);
	 }


	 &__radio-group {
	 	width: 49%;
	 	display: inline-block;


	 	@include respond(tab-port) {// width <=900px
			width: 100%;    //1rem = 8px, 8/16 = 50%
			margin-bottom: 2rem;
		}
	 }

	 //this is now to hide the REAL radio button
	 &__radio-input {
	 	display: none;
	 }

	 &__radio-label {
	 	font-size: $default-font-size;
	 	cursor: pointer;
	 	position: relative;
	 	padding-left: 4.5rem;
	 }


	 &__radio-button {
	 	height: 3rem;
	 	width: 3rem;
	 	border: 5px solid $color-primary;
	 	border-radius: 50%;
	 	display: inline-block;
	 	position: absolute;//this was meant to be relative but all the same as long as the POSITION PROPERTY IS DEFINED then the child element position will work.
	 	left: 0;
	 	top: -.4rem;

	 	//after pseudo-element used to must always have DISPLAY & CONTENT properties defined 
	 	&::after {
	 		content: "";
	 		display: block;
	 		height: 1.3rem;
	 		width: 1.3rem;
	 		border-radius: 50%;
	 		position: absolute;
	 		top: 50%;
	 		left: 50%;
	 		transform: translate(-50%, -50%);
	 		background-color: $color-primary;
	 		opacity: 0;//this is the state when the radio button is not checked
	 		transition: opacity .2s;//this to enable the animation of cheked & unchecked button state.Opacity is targeted here directly
	 	}
	 }


	 //the weired symbol is to target the child element going throught radio-label first.
	 &__radio-input:checked ~ &__radio-label &__radio-button::after {
		opacity: 1;//this is when the button is checked hence the AFTER ELEMENT is made visible
	 }
}
